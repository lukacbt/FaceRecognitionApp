{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","Rank","entries","username","route","SignIn","props","onInputChange","event","target","name","value","setState","onSubmitSignIn","removeImageURL","fetch","method","headers","body","JSON","stringify","email","state","signInEmail","password","signInPassword","then","response","json","user","id","loadUser","error","this","htmlFor","onChange","placeholder","autoComplete","type","borderColor","color","marginBottom","fontWeight","asGuest","Component","Register","onRegister","registerUsername","registerEmail","registerPassword","ImageLinkForm","onDetect","input","length","FaceRecognition","displayText","boxes","imageURL","displayBoxes","map","box","i","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","interactivity","detect_on","events","onhover","mode","modes","grab","distance","line_linked","opacity","App","data","joined","calculateFaceLocation","clarifaiFacesRegions","outputs","regions","image","document","getElementById","Number","region","region_info","bounding_box","face","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.d471867f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn){\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p onClick={() => onRouteChange(\"signin\")} className=\"f3 link dim black underline pa3 pointer\">Sign Out</p>\r\n      </nav>\r\n    )}else {\r\n      return(\r\n        <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <p onClick={() => onRouteChange(\"signin\")} className=\"f3 link dim black underline pa3 pointer\">Sign In</p>\r\n          <p onClick={() => onRouteChange(\"register\")} className=\"f3 link dim black underline pa3 pointer\">Register</p>\r\n        </nav>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from \"react\"\r\nimport Tilt from 'react-tilt'\r\nimport \"./logo.css\"\r\nimport brain from \"./brain.png\"\r\n\r\nconst Logo = () => {\r\n  return(\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 40 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner\"> <img style={{width: \"100px\", height: \"100px\"}} src={brain} alt=\"icon\" /> </div>\r\n      </Tilt>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo","import React from \"react\"\r\n\r\nconst Rank = ({ entries, username, route }) => {\r\n  if(route === \"guest\"){ \r\n    return(\r\n      <div>\r\n        <div className=\"white f3\">\r\n          {\"Hello Guest! Try Our Face Recognition App!\"}\r\n        </div>\r\n      </div>\r\n  )}else {  \r\n  return (\r\n    <div>\r\n      <div className=\"white f3\">\r\n        {`${username}, your current number of entries is...`}\r\n      </div>\r\n      <div className=\"white f1\">\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default Rank","import React, { Component } from \"react\"\r\nimport \"./signin.css\"\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    this.props.removeImageURL()\r\n    fetch(\"https://floating-citadel-50795.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    }).then(response => response.json())\r\n      .then(user => {\r\n        if (user.id){\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange(\"home\")\r\n        }else {\r\n          this.setState({ error: \"Wrong email and password\", signInEmail: \"\", signInPassword: \"\" })\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { signInEmail, signInPassword } = this.state\r\n    return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input value={signInEmail} onChange={this.onInputChange} placeholder=\"Email...\" autoComplete=\"new-password\" className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"signInEmail\"  id=\"email-address\" />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input value={signInPassword} onChange={this.onInputChange} placeholder=\"Password...\" autoComplete=\"new-password\" className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"signInPassword\"  id=\"password\" />\r\n              </div>\r\n              </fieldset>\r\n              <div>\r\n              <input\r\n                style={this.state.error ? {borderColor: \"red\", color:\"red\"} : {borderColor: \"black\", color:\"black\"}}\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib signIn\" \r\n                type=\"submit\" \r\n                value=\"Sign in\" />\r\n              </div>\r\n              <p style={{ color: \"red\", marginBottom: \"-10px\", fontWeight: \"bold\" }}> {this.state.error} </p>\r\n          </div>\r\n          <p onClick={this.props.asGuest} className=\"tryItOut\">Try it out as guest >></p>\r\n        </main>\r\n      </article>\r\n    )}\r\n}\r\n\r\nexport default SignIn","import React, { Component } from \"react\"\r\nimport \"./register.css\"\r\n\r\nclass Register extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      registerUsername: \"\",\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n    }\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  onRegister = () => {\r\n    this.props.removeImageURL()\r\n    fetch(\"https://floating-citadel-50795.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        username: this.state.registerUsername,\r\n        email: this.state.registerEmail,\r\n        password: this.state.registerPassword\r\n      })\r\n    }).then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange(\"home\")\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { registerPassword, registerUsername, registerEmail } = this.state\r\n    return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Username</label>\r\n                <input onChange={this.onInputChange} placeholder=\"Username...\" autoComplete=\"new-password\" className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" value={registerUsername} name=\"registerUsername\" />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input onChange={this.onInputChange} placeholder=\"Email...\" autoComplete=\"new-password\" className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" value={registerEmail} name=\"registerEmail\" />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input onChange={this.onInputChange} placeholder=\"Password...\" autoComplete=\"new-password\" className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" value={registerPassword} name=\"registerPassword\" />\r\n              </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n              <input\r\n                onClick={this.onRegister}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                type=\"submit\" \r\n                value=\"Register\" />\r\n              </div>\r\n          </div>\r\n          <p onClick={this.props.asGuest} className=\"tryItOut\">Try it out as guest >></p>\r\n        </main>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register","import React from \"react\"\r\nimport \"./imagelinkform.css\"\r\n\r\nconst ImageLinkForm = ({ onInputChange, onDetect, input, error }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {\"This Magic Brain wil detect faces in your pictures. Give it a try!\"}  \r\n      </p>    \r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input onChange={onInputChange} value={input} className=\"f4 pa2 w-70 center\" type=\"text\" />\r\n          <button onClick={onDetect} className=\"w-30 f4 link ph3 pv2 dib white bg-light-purple\">Detect</button>\r\n        </div>\r\n        <p style={{ color: \"red\", fontWeight: \"bold\" }}>{error.length ? error : \"\"}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLinkForm","import React, { Component } from \"react\"\r\nimport \"./FaceRecognition.css\"\r\n\r\nclass FaceRecognition extends Component {\r\n\r\n  displayText = () => {\r\n    if(this.props.boxes.length === 1){\r\n      return <p style={this.props.imageURL && !this.props.error.length ? {display: \"block\"}: {display: \"none\"}}>There is {this.props.boxes.length} face in the picture!</p>\r\n    }else if (this.props.boxes.length > 1) {\r\n      return <p style={this.props.imageURL && !this.props.error.length ? {display: \"block\"}: {display: \"none\"}}>There are {this.props.boxes.length} faces in the picture!</p>\r\n    }else {\r\n      return <p style={this.props.imageURL && !this.props.error.length ? {display: \"block\"}: {display: \"none\"}}>There are NO faces in the picture!</p>\r\n    }\r\n  }\r\n\r\n  displayBoxes = () => {\r\n    if(this.props.boxes.length > 0) {\r\n      return  this.props.boxes.map((box, i) => {\r\n        return <div key={i} className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imageURL, removeImageURL } = this.props\r\n    return (\r\n      <div>\r\n        <div className=\"center ma\">\r\n          {this.displayText()}\r\n          <div className=\"absolute img-container\">\r\n            <button onClick={removeImageURL} style={imageURL ? {display: \"block\"}: {display: \"none\"}} className=\"close-img\">✖</button>\r\n            <img id=\"inputImage\" src={imageURL} alt=\"Not Recognized\" width=\"500px\" height=\"auto\" style={imageURL === \"\" ? {display: \"none\"} : {display: \"block\"}} />  \r\n            {this.displayBoxes()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FaceRecognition","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation/Navigation\"\nimport Logo from \"./components/Logo/Logo\"\nimport Rank from \"./components/Rank/Rank\"\nimport SignIn from \"./components/SignIn/SignIn\"\nimport Register from \"./components/Register/Register\"\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\"\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\"\nimport Particles from 'react-particles-js'\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 130,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\"\n      }\n    },\n    modes: {\n      grab: {\n        distance: 200,\n        line_linked: {opacity: .6}\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      error: \"\",\n      input: \"\",\n      imageURL: \"\",\n      boxes: [],\n      route: \"signin\",\n      isSignedIn: false,\n      user: {\n        id: \"\",\n        username: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    }\n  }\n\n  asGuest = () => {\n    this.setState({ route: \"guest\" })\n  }\n\n  removeImageURL = () => {\n    this.setState({ imageURL: \"\" })\n  }\n\n  loadUser = data => {\n    this.setState( {user: {\n      id: data.id,\n      username: data.username,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = data => {\n    const clarifaiFacesRegions = data.outputs[0].data.regions\n    const image = document.getElementById(\"inputImage\")\n    const width = Number(image.width)\n    const height = Number(image.height)\n    // RETURN ARRAY OF OBJECTS\n    if(clarifaiFacesRegions) {\n      const allFacesArray = clarifaiFacesRegions.map(region => {\n        return region.region_info.bounding_box\n      })\n      const boxes = allFacesArray.map(face => {\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - (face.right_col * width),\n          bottomRow: height - (face.bottom_row * height)\n        }\n      })\n      return boxes\n    }else {\n      return []\n    }\n  }\n\n  displayFaceBox = boxes => {\n    this.setState({ boxes, input: \"\" })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value})\n  }\n  \n  onDetect = () => {\n    this.setState({ imageURL: this.state.input, boxes: [], error: \"\" })\n    fetch(\"https://floating-citadel-50795.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n      input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if(response && this.state.route === \"home\") {\n          fetch(\"https://floating-citadel-50795.herokuapp.com/image\", {\n            method: \"put\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(error => this.setState({ error: `${error}, did you enter URL of an image?` }))\n  }\n\n  onRouteChange = (route) => {\n    switch (route) {\n      case \"signin\":\n        this.setState({ isSignedIn: false })\n        break\n      case \"register\":\n        this.setState({ isSignedIn: false })\n        break\n      case \"home\": \n        this.setState({ isSignedIn: true })\n        break\n      default:\n        this.setState({ isSignedIn: false })\n    }\n    this.setState({ route: route })\n  }\n\n  render () {\n    const { isSignedIn, boxes, imageURL, route, input, user, error } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n                params={particlesOptions}\n              />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === \"home\" || route === \"guest\"\n          ?<div>\n            <Logo />\n            <Rank route={route} username={user.username} entries={user.entries} />\n            <ImageLinkForm error={error} input={input} onDetect={this.onDetect} onInputChange={this.onInputChange} />\n            <FaceRecognition error={error} removeImageURL={this.removeImageURL} boxes={boxes} imageURL={imageURL} />\n          </div>\n          : (\n            route === \"signin\"\n            ?<SignIn removeImageURL={this.removeImageURL} asGuest={this.asGuest} loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            :<Register removeImageURL={this.removeImageURL} asGuest={this.asGuest} loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.c1a57468.png\";"],"sourceRoot":""}